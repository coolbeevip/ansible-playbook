# MGR 主节点初始化
- name: include vars
  include_vars: "vars_antdb.yml"

# 重启 MGR 节点
# - name: Stop Mgr Primary Node
#   shell: "kill $(head -n 1 /data01/antdb/mgr/postmaster.pid)"
#   check_mode: no
#   ignore_errors: true
#   when: inventory_hostname == mgr_nodes.master.ip
- name: Start Mgr Master Node
  shell: "source ~/.bashrc && mgr_ctl start -D $mgrdata"
  check_mode: no

# 添加主机信息
- name: Add hosts to MGR
  #debug:
  #  msg: adbmgr -c "add host {{ node_names[item].name }}(port=22022, protocol='ssh', adbhome='{{ antdb_app_dir }}', address='{{ item }}', agentport={{ andb_agent_port }}, user='{{ antdb_user }}');"
  shell: psql -p {{ antdb_conf_port }} -d postgres -c "add host {{ node_names[item].name }}(port=22022, protocol='ssh', adbhome='{{ antdb_app_dir }}', address='{{ item }}', agentport={{ andb_agent_port }}, user='{{ antdb_user }}');"
  check_mode: no
  with_items: "{{ groups.all }}"
  ignore_errors: true

# 添加 GTM 节点
- name: Add GTM master to MGR
  shell: psql -p {{ antdb_conf_port }} -d postgres -c "add gtmcoord master {{ gtm_nodes.master.name }}(host='{{ gtm_nodes.master.node }}', port={{ antdb_gtm_port }}, path='{{ antdb_data_dir }}/{{ gtm_nodes.master.name }}');"
  check_mode: no
  ignore_errors: true
- name: Add GTM slave to MGR
  shell: psql -p {{ antdb_conf_port }} -d postgres -c "add gtmcoord slave {{ item.name }} for {{ gtm_nodes.master.name }}(host='{{ item.node }}', port={{ antdb_gtm_port }}, path='{{ antdb_data_dir }}/{{ item.name }}');"
  check_mode: no
  with_items: "{{ gtm_nodes.slaves }}"
  ignore_errors: true

# 添加 Coordinator 节点
- name: Add Coordinator to MGR
  shell: psql -p {{ antdb_conf_port }} -d postgres -c "add coordinator master {{ item.name }}(host='{{ item.node }}', port={{ antdb_coordinator_port }}, path='{{ antdb_data_dir }}/{{ item.name }}');"
  check_mode: no
  with_items: "{{ coordinator_nodes }}"
  ignore_errors: true

# 添加 Data 节点
- name: Add DataNode to MGR
  shell: |
      psql -p {{ antdb_conf_port }} -d postgres -c "add datanode master {{ item.master.name }}(host='{{ item.master.node }}', port={{ antdb_datanode_master_port }}, path='{{ antdb_data_dir }}/{{ item.master.name }}');"
      psql -p {{ antdb_conf_port }} -d postgres -c "add datanode slave {{ item.slave.name }} for {{ item.master.name }}(host='{{ item.master.node }}', port={{ antdb_datanode_slave_port }}, path='{{ antdb_data_dir }}/{{ item.slave.name }}');"
  check_mode: no
  with_items: "{{ data_nodes }}"
  ignore_errors: true

# 部署 app 到所有节点
- name: Deploy app
  shell: psql -p {{ antdb_conf_port }} -d postgres -c "deploy all password '{{ antdb_password }}';"
  check_mode: no

# 启动所有 Agent
- name: Start agent
  shell: psql -p {{ antdb_conf_port }} -d postgres -c "start agent all password '{{ antdb_password }}';"
  check_mode: no

# 初始化所有节点
- name: Initialize all
  shell: psql -p {{ antdb_conf_port }} -d postgres -c "init all;"
  check_mode: no

# 添加 MRG 备份节点
- name: Add MGR salve to MGR
  shell: pg_basebackup -h {{ mgr_nodes.master.ip }} -p {{ antdb_conf_port }} -U {{ antdb_user }} -D {{ antdb_mgr_dir }} --nodename mgr_slave_1 -Xs -Fp -R
  check_mode: no
  when: inventory_hostname in mgr_nodes.slave.ips
