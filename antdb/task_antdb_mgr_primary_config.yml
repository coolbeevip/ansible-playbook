# 创建安装目录
# 设置环境变量
# 初始化 MGR

- name: include vars
  include_vars: "vars_antdb.yml"

# 设置 ADB_HOME 环境变量
- name: configuring environment ADB_HOME
  lineinfile:
    dest: ~/.bashrc
    regexp: '^export ADB_HOME=.*$'
    line: "export ADB_HOME={{ antdb_app_dir }}"
    state: present
  check_mode: no

# 设置 ADB_HOME 到 PATH
- name: configuring environment LD_LIBRARY_PATH
  lineinfile:
    dest: ~/.bashrc
    regexp: '^export LD_LIBRARY_PATH=.*$'
    line: "export LD_LIBRARY_PATH=${ADB_HOME}/lib:$LD_LIBRARY_PATH"
    state: present
  check_mode: no

# Configuring environment mgrdata
- name: configuring environment mgrdata
  lineinfile:
    dest: ~/.bashrc
    regexp: '^export mgrdata=.*'
    insertafter: 'EOF'
    line: "export mgrdata={{ antdb_mgr_dir }}"
    state: present
  check_mode: no

# Configuring alias adbmgr
- name: configuring alias adbmgr
  lineinfile:
    dest: ~/.bashrc
    regexp: '^alias adbmgr=.*'
    line: "alias adbmgr='psql -p {{ antdb_conf_port }} -d postgres'"
    state: present
  check_mode: no

# Configuring alias mgr_stop
- name: configuring alias mgr_stop
  lineinfile:
    dest: ~/.bashrc
    regexp: '^alias mgr_stop=.*'
    line: "alias mgr_stop='mgr_ctl stop -D $mgrdata -m fast'"
    state: present
  check_mode: no

# Configuring alias mgr_start
- name: configuring alias mgr_start
  lineinfile:
    dest: ~/.bashrc
    regexp: '^alias mgr_start=.*'
    line: "alias mgr_start='mgr_ctl start -D $mgrdata'"
    state: present
  check_mode: no

# 设置 ADB_HOME 到 PATH
- name: configuring environment PATH
  lineinfile:
    dest: ~/.bashrc
    regexp: '^export PATH=.*'
    line: "export PATH=${ADB_HOME}/bin:$PATH"
    state: present
  check_mode: no

# Install rpm package
- name: Check install rpm package
  stat:
    path: "$ADB_HOME/bin"
  register: check_result
  check_mode: no
  when: inventory_hostname == mgr_nodes.master.ip
- name: Install rpm package
  shell: rpm -i --force {{ antdb_home_dir }}/{{ antdb_tar }} --relocate=/opt/app/antdb={{ antdb_app_dir }}
  check_mode: no
  become: yes
  when: (inventory_hostname == mgr_nodes.master.ip) and (not check_result.stat.exists)
- name: Change rpm file permission
  file:
    path: $ADB_HOME
    owner: "{{ antdb_user }}"
    group: "{{ antdb_group }}"
    recurse: true
    state: directory
    mode: "2755"
  check_mode: no
  become: yes
  when: inventory_hostname == mgr_nodes.master.ip

# Initialize MGR
- name: Check initialize MGR
  stat:
    path: "{{ antdb_mgr_dir }}/postgresql.conf"
  register: check_result
  check_mode: no
- name: Initialize MGR
  shell: initmgr -D $mgrdata
  check_mode: no
  when: (inventory_hostname == mgr_nodes.master.ip) and (not check_result.stat.exists)

# Configuring postgresql.conf
- name: Configuring postgresql.conf listen_addresses
  lineinfile:
    dest: "{{ antdb_mgr_dir }}/postgresql.conf"
    regexp: '^listen_addresses.*'
    line: "listen_addresses = '{{ antdb_conf_listen_addresses }}'"
    state: present
  check_mode: no
- name: Configuring postgresql.conf port
  lineinfile:
    dest: "{{ antdb_mgr_dir }}/postgresql.conf"
    regexp: '^port.*'
    line: "port = {{ antdb_conf_port }}"
    state: present
  check_mode: no
- name: Configuring postgresql.conf log_destination
  lineinfile:
    dest: "{{ antdb_mgr_dir }}/postgresql.conf"
    regexp: '^log_destination.*'
    line: "log_destination = '{{ antdb_conf_log_destination }}'"
    state: present
  check_mode: no
- name: Configuring postgresql.conf logging_collector
  lineinfile:
    dest: "{{ antdb_mgr_dir }}/postgresql.conf"
    regexp: '^logging_collector.*'
    line: "logging_collector = {{ antdb_conf_logging_collector }}"
    state: present
  check_mode: no
- name: Configuring postgresql.conf log_directory
  lineinfile:
    dest: "{{ antdb_mgr_dir }}/postgresql.conf"
    regexp: '^log_directory.*'
    line: "log_directory = '{{ antdb_conf_log_directory }}'"
    state: present
  check_mode: no
- name: Configuring postgresql.conf log_rotation_size
  lineinfile:
    dest: "{{ antdb_mgr_dir }}/postgresql.conf"
    regexp: '^log_rotation_size.*'
    line: "log_rotation_size = {{ antdb_conf_log_rotation_size }}"
    state: present
  check_mode: no
- name: Configuring postgresql.conf log_min_messages
  lineinfile:
    dest: "{{ antdb_mgr_dir }}/postgresql.conf"
    regexp: '^log_min_messages.*'
    line: "log_min_messages = {{ antdb_conf_log_min_messages }}"
    state: present
  check_mode: no
- name: Configuring postgresql.conf log_statement
  lineinfile:
    dest: "{{ antdb_mgr_dir }}/postgresql.conf"
    regexp: '^log_statement.*'
    line: "log_statement = {{ antdb_conf_log_statement }}"
    state: present
  check_mode: no
