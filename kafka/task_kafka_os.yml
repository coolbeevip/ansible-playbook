- name: include vars
  include_vars: "vars_kafka.yml"

# Install linux package
- name: Yum install packages
  yum:
    name:
      - nc # 测试 zookeeper 工具
      - rsync
      - wget
      - yum-utils
    state: present
  check_mode: no
  become: yes

# File Descriptors
- name: Add or modify hard nofile limits
  pam_limits:
    domain: '{{ kafka_user }}'
    limit_type: hard
    limit_item: nofile
    value: '{{ limits_hard_nofile }}'
  check_mode: no
  become: yes
- name: Add or modify soft nofile limits
  pam_limits:
    domain: '{{ kafka_user }}'
    limit_type: soft
    limit_item: nofile
    value: '{{ limits_soft_nofile }}'
  check_mode: no
  become: yes
- name: Add or modify hard nproc limits
  pam_limits:
    domain: '{{ kafka_user }}'
    limit_type: hard
    limit_item: nproc
    value: '{{ limits_hard_nproc }}'
  check_mode: no
  become: yes
- name: Add or modify soft nproc limits
  pam_limits:
    domain: '{{ kafka_user }}'
    limit_type: soft
    limit_item: nproc
    value: '{{ limits_soft_nproc }}'
  check_mode: no
  become: yes

# Configure kernel mmap
- name: Configure kernel vm.max_map_count
  shell: "/sbin/sysctl -w vm.max_map_count={{ kernel_max_map_count }}"
  check_mode: no
  become: yes

# Configure sysctl configuration
- name: Check /etc/sysctl.config exists
  stat: path=/etc/sysctl.config
  register: check_etc_sysctl_file
  check_mode: no
  become: yes
- name: Configure sysctl max_map_count
  lineinfile:
    dest: /etc/sysctl.config
    regexp: '^vm.max_map_count=.*'
    line: "vm.max_map_count={{ kernel_max_map_count }}"
    state: present
  when: check_etc_sysctl_file.stat.exists
  check_mode: no
  become: yes
- name: Check /etc/sysctl.conf exists
  stat: path=/etc/sysctl.conf
  register: check_etc_sysctl_file
  check_mode: no
  become: yes
- name: Configure sysctl max_map_count
  lineinfile:
    dest: /etc/sysctl.conf
    regexp: '^vm.max_map_count=.*'
    line: "vm.max_map_count={{ kernel_max_map_count }}"
    state: present
  when: check_etc_sysctl_file.stat.exists
  check_mode: no
  become: yes

# 初始化程序目录
- name: Create kafka home
  file:
    path: "{{ kafka_home_dir }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: "2750"
  become: yes
  check_mode: no

# 初始化数据目录
- name: Create others directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: "2750"
  with_items:
    - "{{ zookeeper_data_dir }}"
    - "{{ zookeeper_datalog_dir }}"
    - "{{ kafka_log_dirs }}"
  check_mode: no
  become: yes

# 设置  PATH
- name: configuring environment PATH
  lineinfile:
    dest: ~/.bashrc
    regexp: '^export PATH=.*'
    line: "export PATH={{ kafka_home_dir }}/{{ kafka_tar_unzip_dir }}/bin:$PATH"
    state: present
  check_mode: no
