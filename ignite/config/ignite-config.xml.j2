<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">
    <bean id="grid.cfg" class="org.apache.ignite.configuration.IgniteConfiguration">
        <property name="workDirectory" value="{{ ignite.directory.work }}"/>
        <property name="clientMode" value="{{ ignite.config.clientMode }}"/>
        <property name="peerClassLoadingEnabled" value="{{ ignite.config.peerClassLoadingEnabled }}"/>
        <property name="communicationSpi">
          <bean class="org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi">
            <property name="localPort" value="{{ ignite.config.communication.port }}"/>
          </bean>
        </property>
        <property name="connectorConfiguration">
          <bean class="org.apache.ignite.configuration.ConnectorConfiguration">
            <property name="port" value="{{ ignite.config.connector.port }}"/>
          </bean>
        </property>
        <property name="sqlConnectorConfiguration">
          <bean class="org.apache.ignite.configuration.SqlConnectorConfiguration">
            <property name="port" value="{{ ignite.config.sqlConnector.port }}"/>
          </bean>
        </property>
{% if ignite.config.includeEventTypes %}
        <property name="includeEventTypes">
            <list>
                <util:constant static-field="org.apache.ignite.events.EventType.EVT_TASK_STARTED"/>
                <util:constant static-field="org.apache.ignite.events.EventType.EVT_TASK_FINISHED"/>
                <util:constant static-field="org.apache.ignite.events.EventType.EVT_TASK_FAILED"/>
                <util:constant static-field="org.apache.ignite.events.EventType.EVT_TASK_TIMEDOUT"/>
                <util:constant static-field="org.apache.ignite.events.EventType.EVT_TASK_SESSION_ATTR_SET"/>
                <util:constant static-field="org.apache.ignite.events.EventType.EVT_TASK_REDUCED"/>
                <util:constant static-field="org.apache.ignite.events.EventType.EVT_CACHE_OBJECT_PUT"/>
                <util:constant static-field="org.apache.ignite.events.EventType.EVT_CACHE_OBJECT_READ"/>
                <util:constant static-field="org.apache.ignite.events.EventType.EVT_CACHE_OBJECT_REMOVED"/>
            </list>
        </property>
{% endif %}
        <property name="discoverySpi">
{% if ignite.config.discoverySpi.tcp.enabled %}
            <bean class="org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi">
                <property name="localPort" value="{{ ignite.config.discoverySpi.localPort }}"/>
                <property name="localPortRange" value="{{ ignite.config.discoverySpi.localPortRange }}"/>
                <property name="ipFinder">
{% if ignite.config.discoverySpi.tcp.ipfinder == 'multicast' %}
                    <bean class="org.apache.ignite.spi.discovery.tcp.ipfinder.multicast.TcpDiscoveryMulticastIpFinder">
                      <property name="multicastGroup" value="{{ ignite.config.discoverySpi.tcp.multicast.multicastGroup }}"/>
                      <property name="addresses">
                        <list>
{% for address in ignite.config.discoverySpi.tcp.addresses %}
                          <value>{{ address }}:{{ ignite.config.discoverySpi.localPort }}</value>
{% endfor %}
                        </list>
                      </property>
                    </bean>
{% endif %}
                </property>
            </bean>
{% endif %}
        </property>
    </bean>
</beans>
