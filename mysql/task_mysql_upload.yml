- name: include vars
  include_vars: "vars_mysql.yml"

# 初始化目录
- name: create mysql home
  file:
    path: "{{ mysql_home_dir }}"
    state: directory
    owner: "{{ mysql_user }}"
    group: "{{ mysql_group }}"
  become: yes
  check_mode: no

# 上传 mysql 安装包
- name: check upload mysql
  stat:
    path: "{{ mysql_home_dir }}/{{ mysql_tar }}"
  register: check_result
  check_mode: no
  become: no
- name: upload mysql
  synchronize:
    src: /ansible-playbook/packages/{{ mysql_tar }}
    dest: "{{ mysql_home_dir }}/{{ mysql_tar }}"
  check_mode: no
  when: not check_result.stat.exists

# 解压缩 mysql 安装包
- name: check unzip mysql
  stat:
    path: "{{ mysql_home_dir }}/{{ mysql_tar_unzip_dir }}"
  register: check_result
  check_mode: no
- name: unzip mysql
  shell: |
    cd {{ redis_mysql_dir }}
    xz -d {{ mysql_tar }}
    tar -vxf {{ mysql_tar }}
  check_mode: no
  when: not check_result.stat.exists

# 上传 mysql shell 安装包
- name: check upload mysql shell
  stat:
    path: "{{ mysql_home_dir }}/{{ mysql_shell_tar }}"
  register: check_result
  check_mode: no
  become: no
- name: upload mysql
  synchronize:
    src: /ansible-playbook/packages/{{ mysql_shell_tar }}
    dest: "{{ mysql_home_dir }}/{{ mysql_shell_tar }}"
  check_mode: no
  when: not check_result.stat.exists

# 解压缩 mysql shell 安装包
- name: check unzip mysql shell
  stat:
    path: "{{ redis_home_dir }}/{{ mysql_shell_tar_unzip_dir }}"
  register: check_result
  check_mode: no
- name: unzip redis
  shell: |
    cd "{{ redis_home_dir }}"
    tar zxf {{ mysql_shell_tar }}
  check_mode: no
  when: not check_result.stat.exists

# 上传 mysql router 安装包
- name: check upload mysql router
  stat:
    path: "{{ mysql_home_dir }}/{{ mysql_router_tar }}"
  register: check_result
  check_mode: no
  become: no
- name: upload mysql
  synchronize:
    src: /ansible-playbook/packages/{{ mysql_router_tar }}
    dest: "{{ mysql_home_dir }}/{{ mysql_router_tar }}"
  check_mode: no
  when: not check_result.stat.exists

# 解压缩 mysql router 安装包
- name: check unzip mysql router
  stat:
    path: "{{ mysql_home_dir }}/{{ mysql_router_tar_unzip_dir }}"
  register: check_result
  check_mode: no
- name: unzip mysql
  shell: |
    cd {{ redis_mysql_dir }}
    xz -d {{ mysql_router_tar }}
    tar -vxf {{ mysql_router_tar }}
  check_mode: no
  when: not check_result.stat.exists
