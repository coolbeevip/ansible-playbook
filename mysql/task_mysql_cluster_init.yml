- name: include vars
  include_vars: "vars_mysql.yml"

# 删除以前集群初始化脚本
- name: delete mysql_cluster_init.sql file
  file:
    path: "{{ mysql_script_dir }}/mysql_cluster_init.sql"
    state: absent
  check_mode: no

# 在集群初始化脚本中增加集群创建脚本
- name: create mysql_cluster_init.sql file
  lineinfile:
    dest: "{{ mysql_script_dir }}/mysql_cluster_init.sql"
    line: "{{ item }}"
    state: present
    create: true
  with_items: |
    shell.connect('root@{{ inventory_hostname }}:{{ mysqld_port }}', '{{ mysql_user_root_password }}')
    shell.options['dba.restartWaitTimeout']=7200
    dba.createCluster('{{ cluster_name }}', {'localAddress': '{{ inventory_hostname }}'})
    var cluster=dba.getCluster('{{ cluster_name }}')
  check_mode: no

# 在集群初始化脚本中增加从节点脚本
- name: add slave script to mysql_cluster_init.sql
  lineinfile:
    dest: "{{ mysql_script_dir }}/mysql_cluster_init.sql"
    line: "cluster.addInstance('root@{{ item }}:{{ mysqld_port }}', {'localAddress': '{{ item }}', 'password': '{{ mysql_user_root_password }}','recoveryMethod':'clone','waitRecovery':'1'})"
    state: present
    create: true
  with_items: "{{ groups.all | difference(inventory_hostname) }}"
  check_mode: no

# 执行集群初始化脚本
- name: init mysql cluster
  shell: "source ~/.bash_profile && mysqlsh --no-password < {{ mysql_script_dir }}/mysql_cluster_init.sql"
  check_mode: no
  register: init_cluster_result
- name: init mysql cluster result
  debug:
    var: init_cluster_result.stdout_lines
